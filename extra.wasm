#meta

name: "Thurisaz Extra"

#text

%data

@__errno__
%8b 0

@__assertion_failed
%stringz "Assertion failed!\n"

@__pure_virtual_called
%stringz "Pure virtual function called!\n"

@__abort_message
%stringz "Aborted.\n"

@__atexit_count
%8b 0

@__atexit_fns
%fill 4096 0

@__atexit_args
%fill 4096 0

@__atexit_dso_handles
%fill 4096 0

%code

@int_system
	$sp{v*} -> $k2{v*}
	$k1{v} -> $sp{v*}

	$a0{ul} == 0{ul} -> $m0{uc}
	: int_system.term if $m0{uc}
	<p "Invalid syscall: ">
	<prd $a0{ul}>
	<prc '\n'>
	<halt>

	@int_system.term
	%setpt $k4{v*}
	%page on
	$k0{ul} -> $a0{ul}
	:: terminate_process
	:: kernel_loop

	@int_system.end
	$k2{v*} -> $sp{v*}
	$e0{v*} += 8{ul}
	: ] %page $e0{v*}

@int_timer
	1{uc} -> $kf{uc}
	$kf{uc} -> [timer_expired{uc*}]
	// $e0 += 8 // TODO!: verify
	: ] %page $e0{v*}

@__cxa_atexit
	// $m1 = __atexit_count;
	&__atexit_count{ul*} -> $m3{ul*}
	[$m3{ul*}] -> $m1{ul}

	// if (512 <= __atexit_count) halt();
	$m1{ul} >= 512{ul} -> $m2{uc}
	: __cxa_atexit.perish if $m2{uc}

	// offset = __atexit_count * 8;
	$m1{ul} << 3{ul} -> $m2{ul}

	// *(__atexit_fns + offset) = fn;
	&__atexit_fns{v**} -> $m0{v**}
	$m0{v**} += $m2{ul}
	$a0{v*} -> [$m0{v**}]

	// *(__atexit_args + offset) = arg;
	&__atexit_args{ul*} -> $m0{ul*}
	$m0{ul*} += $m2{ul}
	$a1{ul} -> [$m0{ul*}]

	// *(__atexit_dso_handles + offset) = arg;
	&__atexit_dso_handles{v**} -> $m0{v**}
	$m0{v**} += $m2{ul}
	$a2{v*} -> [$m0{v**}]

	// ++__atexit_count;
	$m1{ul}++
	$m1{ul} -> [$m3{ul*}]

	: $rt{v*}

	@__cxa_atexit.perish
	<p "__cxa_atexit: overflow\n">
	<halt>

@_Z17___errno_locationv
	&__errno__{si*} -> $r0{si*}
	: $rt{v*}

@__assert_fail
	&__assertion_failed{uc*} -> $a0{uc*}
	:: strprint
	<halt>

@main
	? mem -> $sp{v*}
	$sp{v*} >> 1{ul} -> $sp{v*}
	0xcafef00d{v*} -> $fp{v*}
	:: kernel_main
	[__atexit_count{ul*}] -> $m0{ul}
	@main.atexit.loop
		$m0{ul} <= 0{ul} -> $m1{uc}
		: main.halt if $m1{uc}
		$m0{ul}--
		$m0{ul} << 3{ul} -> $m1{ul}
		&__atexit_fns{v**} -> $m2{v**}
		$m2{v**} += $m1{ul}
		[$m2{v**}] -> $m2{v*}
		&__atexit_args{ul*} -> $a0{ul*}
		$a0{ul*} += $m1{ul}
		[$a0{ul*}] -> $a0{ul}
		&__atexit_dso_handles{v**} -> $a1{v**}
		$a1{v**} += $m1{ul}
		[$a1{v**}] -> $a1{v*}
		:: $m2{v*}
		: main.atexit.loop
	@main.halt
	<p "Halted.\n">
	<halt>

@__cxa_pure_virtual
	&__pure_virtual_called{uc*} -> $a0{uc*}
	:: strprint
	<halt>

@llvm.ctlz.i64
	#[ $t0{v} // i
	#[ $t1{v} // mask
	#[ $t2{v} // -1

	63{ul} -> $t0{ul}
	0{ul} -> $r0{ul}
	$0{ul} - 1{ul} -> $t2{ul}

	@__llvm.ctlz.i64_loop
		1{ul} -> $t1{ul}
		$t1{ul} << $t0{ul} -> $t1{ul}
		$a0{v} & $t1{ul} -> $t1{ul}
		: __llvm.ctlz.i64_done if $t1{ul}
		$r0{ul}++
		$t0{ul}--
		$t0{ul} == $t2{ul} -> $t1{uc}
		: __llvm.ctlz.i64_done if $t1{uc}
		: __llvm.ctlz.i64_loop
	@__llvm.ctlz.i64_done

	#] $t2{v}
	#] $t1{v}
	#] $t0{v}
	: $rt{v*}

@llvm.ctlz.i32
	#[ $t0{v} // i
	#[ $t1{v} // mask
	#[ $t2{v} // -1

	31{ul} -> $t0{ul}
	0{ul} -> $r0{ul}
	$0{ul} - 1{ul} -> $t2{ul}

	@__llvm.ctlz.i32_loop
		1{ul} -> $t1{ul}
		$t1{ul} << $t0{ul} -> $t1{ul}
		$a0{v} & $t1{ul} -> $t1{ul}
		: __llvm.ctlz.i32_done if $t1{ul}
		$r0{ul}++
		$t0{ul}--
		$t0{ul} == $t2{ul} -> $t1{uc}
		: __llvm.ctlz.i32_done if $t1{uc}
		: __llvm.ctlz.i32_loop
	@__llvm.ctlz.i32_done

	#] $t2{v}
	#] $t1{v}
	#] $t0{v}
	: $rt{v*}

@llvm.fshl.i32
	bc $a0{v} -> $a0{ul}
	bc $a1{v} -> $a1{ul}
	bc $a2{v} -> $a2{ul}
	lui: 0{ui} -> $a0{ul}
	lui: 0{ui} -> $a1{ul}
	$a2{ul} %= 32{ul}
	$a0{ul} <<= 32{ul}
	$a0{ul} | $a1{ul} -> $r0{ul}
	$r0{ul} <<= $a2{ul}
	$r0{ul} >>>= 32{ul}
	: $rt{v*}

@llvm.fshl.i8
	bc $a0{v} -> $a0{ul}
	bc $a1{v} -> $a1{ul}
	bc $a2{v} -> $a2{ul}
	$a0{ul} &= 0xff{ul}
	$a1{ul} &= 0xff{ul}
	$a2{ul} %= 8{ul}
	$a0{ul} <<= 8{ul}
	$a0{ul} | $a1{ul} -> $r0{ul}
	$r0{ul} <<= $a2{ul}
	$r0{ul} >>>= 8{ul}
	$r0{ul} &= 0xff{ul}
	: $rt{v*}

@llvm.trap
	&__abort_message{uc*} -> $a0{uc*}
	:: strprint
	<halt>

@llvm.umul.with.overflow.i64
	$a0{ul} * $a1{ul}
	$lo{ul} -> $r0{ul}
	$hi{ul} == 0{ul} -> $r1{uc}
	!$r1{uc} -> $r1{uc}
	: $rt{v*}
